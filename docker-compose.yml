version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ecom-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecom
    ports:
      - "5555:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecom-backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: ecom
      DB_SSLMODE: disable
      PORT: 8080
    ports:
      - "8888:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8888/api/v1
    container_name: ecom-frontend
    ports:
      - "3333:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
